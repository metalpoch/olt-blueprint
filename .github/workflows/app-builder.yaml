name: App Builder

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ["auth", "core", "report", "measurement", "client", "smart"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for ${{ matrix.module }}
        uses: docker/build-push-action@v6
        with:
          context: . 
          file: ./${{ matrix.module }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.module }}:latest
            ghcr.io/${{ github.repository }}/${{ matrix.module }}:${{ github.sha }}
          continue-on-error: true
          
      - name: Save build result
        run: |
          echo "${{ matrix.module }}=$([[ ${{ steps.build_module.outcome }} == 'success' ]] && echo '✅' || echo '❌')" >> $GITHUB_ENV

  notify:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    steps:
      - name: Generate checklist message
        run: |
          for module in auth core report measurement client smart; do
            status=$(printenv | grep "^${module}=" | cut -d= -f2)
            echo "- ${module}: ${status}" >> checklist.txt
          done

      - name: Send Telegram Notification
        id: telegram
        uses: metalpoch/telegram-alerts-action@v1
        with:
          bot-token-id: ${{ secrets.BOT_TOKEN_ID }}
          chat-id: ${{ secrets.CHAT_ID }}
          disable-web-page-preview: true
          text: |
            *Docker Image Build Summary*\n\n
            $(cat checklist.txt)\n\n
            *🔗 Links:* [Releases](https://ghcr.io/${{ github.repository }})
